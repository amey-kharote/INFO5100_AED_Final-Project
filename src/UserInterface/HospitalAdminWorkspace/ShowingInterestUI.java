/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.HospitalAdminWorkspace;

import Business.Entity.Applicant;
import Business.Entity.ApplicantDirectory;
import Business.Organization.Organization;
import Business.Utils.Utils;
import UserInterface.HospitalApplicant.DonorRegistrationForm;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Amey
 */
public class ShowingInterestUI extends javax.swing.JPanel {

    /**
     * Creates new form ManageShowingInterest
     */
    JPanel rightJPanel;
    Organization org;
    ApplicantDirectory appDir = new ApplicantDirectory();
    
    public ShowingInterestUI(JPanel rightJPanel, Organization org) {
        initComponents();
        this.rightJPanel = rightJPanel;
        this.org = org;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showingInterestHeader = new javax.swing.JLabel();
        enterEmailTextFieldLabel = new javax.swing.JLabel();
        enterEmailTextField = new javax.swing.JTextField();
        yesRadioButton = new javax.swing.JRadioButton();
        noRadioButton = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoTextArea = new javax.swing.JTextArea();
        submitButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        showingInterestHeader.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        showingInterestHeader.setText("Showing Awareness Of OTM importance");
        add(showingInterestHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, 42));

        enterEmailTextFieldLabel.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        enterEmailTextFieldLabel.setText("Enter email ID");
        add(enterEmailTextFieldLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, -1, -1));

        enterEmailTextField.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        add(enterEmailTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 270, -1));

        yesRadioButton.setBackground(new java.awt.Color(255, 204, 204));
        yesRadioButton.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        yesRadioButton.setText("YES");
        yesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesRadioButtonActionPerformed(evt);
            }
        });
        add(yesRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, -1, -1));

        noRadioButton.setBackground(new java.awt.Color(255, 204, 204));
        noRadioButton.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        noRadioButton.setText("NO");
        add(noRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 350, -1, -1));

        infoTextArea.setEditable(false);
        infoTextArea.setBackground(new java.awt.Color(255, 204, 204));
        infoTextArea.setColumns(20);
        infoTextArea.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        infoTextArea.setLineWrap(true);
        infoTextArea.setRows(5);
        infoTextArea.setText("1. Improvements in medical techniques and pharmacological anti-reject therapies have made organ transplantation a powerful and valid way to treat diseases. \n\n2. Thanks to this, and to the relevance that mass media put on it, \nthe number of donors is constantly increasing.\n\n3. Donors are usually persons who have been involved in serious accidents and are kept artificially alive though cerebral death has been stated. \n\n4. In such patients is extremely difficult to maintain acceptable vital parameters for a long time, and any variation in them can lead to the loss of organs. \n\n5. Moreover, after the organs have been taken from the body, they can be stored for very few hours and the transplant must take place in the shortest period possible.");
        infoTextArea.setWrapStyleWord(true);
        infoTextArea.setBorder(null);
        infoTextArea.setCaretColor(new java.awt.Color(255, 51, 51));
        infoTextArea.setFocusable(false);
        jScrollPane1.setViewportView(infoTextArea);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, 580, 400));

        submitButton.setBackground(new java.awt.Color(153, 204, 255));
        submitButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 580, 200, 40));

        backButton.setBackground(new java.awt.Color(153, 204, 255));
        backButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 170, 40));

        jButton4.setBackground(new java.awt.Color(153, 204, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton4.setText("<< Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 580, 200, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void yesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesRadioButtonActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_yesRadioButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
        if(enterEmailTextField.getText().equals("")&& yesRadioButton.isSelected()== false && noRadioButton.isSelected() == false){
            JOptionPane.showMessageDialog(null, "Please enter email and choose a valid option.");
            return;
        }
        if(!enterEmailTextField.getText().equals("")){
            for(Applicant applicant : appDir.getApplicantRecords()){
                if(applicant.getApplicantEmailId().equals(enterEmailTextField.getText())){
                   JOptionPane.showMessageDialog(null, "Email already exists. Please register with a new email id!");
                    return; 
                }
        }
            
        Utils util = new Utils();
        if( util.isEmaildIdvalid(enterEmailTextField.getText())){
            if (yesRadioButton.isSelected()){
                appDir.createApplicant(true, enterEmailTextField.getText());
                DonorRegistrationForm donorReg= new DonorRegistrationForm(rightJPanel, org, enterEmailTextField.getText());
                rightJPanel.add("donorRegistration", donorReg);
                CardLayout layout = (CardLayout) rightJPanel.getLayout();
                layout.next(rightJPanel);
            }
            else if(noRadioButton.isSelected()) {
                appDir.createApplicant(false, enterEmailTextField.getText());
                JOptionPane.showMessageDialog(null, "Thanks for showing interest!");
                return;
            }
        }        
        else{
            JOptionPane.showMessageDialog(null, "Please enter a valid email!");
        }  
     }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        rightJPanel.remove(this);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.previous(rightJPanel);

    }//GEN-LAST:event_backButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField enterEmailTextField;
    private javax.swing.JLabel enterEmailTextFieldLabel;
    private javax.swing.JTextArea infoTextArea;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton noRadioButton;
    private javax.swing.JLabel showingInterestHeader;
    private javax.swing.JButton submitButton;
    private javax.swing.JRadioButton yesRadioButton;
    // End of variables declaration//GEN-END:variables
}
