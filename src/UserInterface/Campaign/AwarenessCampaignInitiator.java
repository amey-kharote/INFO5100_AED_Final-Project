/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Campaign;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FundingEnterprise;
import Business.Entity.Applicant;
import Business.Entity.ApplicantDirectory;
import Business.Entity.CampaignEvent;
import Business.Network.Network;
import Business.Organization.ApplicantOrg;
import Business.Organization.CorporateFundOrg;
import Business.Organization.TrustFundOrg;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Utils.Utils;
import Business.WorkQueue.FundingWorkRequest;
import UserInterface.FundsRetrieval.FundsRequestStatusPanel;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Amey
 */
public class AwarenessCampaignInitiator extends javax.swing.JPanel {

    EcoSystem ecoSystem;
    JPanel panel;
    private Enterprise enterprise;
    private UserAccount userAccount;
    ApplicantDirectory appDirectory = new ApplicantDirectory();
    Utils utility;
    /**
     * Creates new form AwarenessCampaignInitiator
     */
    public AwarenessCampaignInitiator(EcoSystem ecoSystem, JPanel panel, Enterprise enterprise, UserAccount userAccount) {
        
        initComponents();
        this.ecoSystem = ecoSystem;
        this.panel = panel;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        
        populateEventTable();
        populateNetworkList();
    }
    
    public void populateEventTable(){
        
        DefaultTableModel dtm = (DefaultTableModel)displayScheduledEventsTable.getModel();
        dtm.setRowCount(0);
        
        if(ecoSystem != null && ecoSystem.getCampaignList() != null){
            for(CampaignEvent campaign : ecoSystem.getCampaignList()){
                Object[] row = new Object[4];
                row[0] = campaign.getCampaignName();
                row[1] = campaign.getNetworkName();
                row[2] = campaign.getDate();
                row[3] = campaign.getMoney();
                
                dtm.addRow(row);
            }
            
        }
    }
    
    public void populateNetworkList(){
        
        chooseCityFormComboBox.removeAllItems();
        for(Network networkName : ecoSystem.getNetworks()){
            chooseCityFormComboBox.addItem(networkName);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scheduledEventTableLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        displayScheduledEventsTable = new javax.swing.JTable();
        chooseCityFormLabel = new javax.swing.JLabel();
        chooseCityFormComboBox = new javax.swing.JComboBox();
        eventDateFormLabel = new javax.swing.JLabel();
        setupEventBtn = new javax.swing.JButton();
        eventNameFormLabel = new javax.swing.JLabel();
        eventNameFromTextField = new javax.swing.JTextField();
        requestFundsFormTextField = new javax.swing.JTextField();
        requestFundsFormLabel = new javax.swing.JLabel();
        requestFundsFormCurrencyLabel = new javax.swing.JLabel();
        fundsRequestStatusBtn = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        reqCorporateFunds = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(null);

        scheduledEventTableLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        scheduledEventTableLabel.setText("Scheduled Event Details");
        add(scheduledEventTableLabel);
        scheduledEventTableLabel.setBounds(44, 22, 250, 27);

        displayScheduledEventsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Event Name", "Network", "Date", "Funds"
            }
        ));
        jScrollPane3.setViewportView(displayScheduledEventsTable);

        add(jScrollPane3);
        jScrollPane3.setBounds(44, 62, 949, 137);

        chooseCityFormLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        chooseCityFormLabel.setText("Choose City");
        add(chooseCityFormLabel);
        chooseCityFormLabel.setBounds(94, 247, 124, 28);

        chooseCityFormComboBox.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        chooseCityFormComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(chooseCityFormComboBox);
        chooseCityFormComboBox.setBounds(264, 245, 147, 33);

        eventDateFormLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        eventDateFormLabel.setText("Date of Event");
        add(eventDateFormLabel);
        eventDateFormLabel.setBounds(80, 336, 138, 28);

        setupEventBtn.setBackground(new java.awt.Color(153, 204, 255));
        setupEventBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        setupEventBtn.setText("Setup Event");
        setupEventBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setupEventBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setupEventBtnActionPerformed(evt);
            }
        });
        add(setupEventBtn);
        setupEventBtn.setBounds(53, 484, 361, 35);

        eventNameFormLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        eventNameFormLabel.setText("Name of Event");
        add(eventNameFormLabel);
        eventNameFormLabel.setBounds(69, 285, 149, 28);

        eventNameFromTextField.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        add(eventNameFromTextField);
        eventNameFromTextField.setBounds(264, 285, 147, 33);

        requestFundsFormTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestFundsFormTextFieldActionPerformed(evt);
            }
        });
        add(requestFundsFormTextField);
        requestFundsFormTextField.setBounds(263, 377, 147, 33);

        requestFundsFormLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        requestFundsFormLabel.setText("Request Funds");
        add(requestFundsFormLabel);
        requestFundsFormLabel.setBounds(67, 377, 151, 28);

        requestFundsFormCurrencyLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        requestFundsFormCurrencyLabel.setText("$");
        add(requestFundsFormCurrencyLabel);
        requestFundsFormCurrencyLabel.setBounds(244, 377, 18, 28);

        fundsRequestStatusBtn.setBackground(new java.awt.Color(153, 204, 255));
        fundsRequestStatusBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        fundsRequestStatusBtn.setText("Funds Reqested Status");
        fundsRequestStatusBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        fundsRequestStatusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fundsRequestStatusBtnActionPerformed(evt);
            }
        });
        add(fundsRequestStatusBtn);
        fundsRequestStatusBtn.setBounds(53, 537, 361, 35);
        add(jDateChooser2);
        jDateChooser2.setBounds(264, 331, 147, 32);

        reqCorporateFunds.setText("jButton1");
        add(reqCorporateFunds);
        reqCorporateFunds.setBounds(460, 480, 230, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void setupEventBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setupEventBtnActionPerformed

        Network networkName = (Network) chooseCityFormComboBox.getSelectedItem();
        String campaignName = eventNameFromTextField.getText();
        Date eventDate = jDateChooser2.getDate();
        
        Date date = new Date();
        Date today = new java.sql.Date (date.getTime());
 
        try{
        if(networkName.equals(null)){
            JOptionPane.showMessageDialog(null, "Please select city for the event");
            return;
        }else if(campaignName.equals("")){
            JOptionPane.showMessageDialog(null, "Please add the event Name ");
            return;
        }else if(eventDate.equals(null)){
            JOptionPane.showMessageDialog(null, "Please select the date for the event");
            return;
        }else if(requestFundsFormTextField.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please enter the amount of funds required");
            return;
        }
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Please enter values for all the fields");
            return;
        }
        /*
        if(!(utility.isValidCampaign(campaignName))){
            JOptionPane.showMessageDialog(null, "Campign Name is not valid");
            return;
        }*/
        
        //Validate Date
        try{
            if(eventDate.compareTo(today) < 0){
                JOptionPane.showMessageDialog(null,"Please select a valid date forthe event");
                return;
            }
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Please add the date");
            return;
        }
        
        //Handle exception for funds 
        float money = 0;
        try{
            money = Float.parseFloat(requestFundsFormTextField.getText());
            requestFundsFormTextField.setText("");
            
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Please add correct amount of funds");
        }
        
        //Check for empty details
        
        //Send email to all the applicants
        if(ecoSystem != null){
            System.out.println("####LP#### Befoer sending email");
            for(Applicant applicant : appDirectory.getApplicantRecords()){
                utility.sendEmail(applicant.getApplicantEmailId(), campaignName, String.valueOf(eventDate), String.valueOf(networkName));
            }
            
            for(Network network: ecoSystem.getNetworks()){
                if(network.getName().equals(String.valueOf(networkName))){
                  for(Enterprise enterprise :   network.getEnterpriseDirectory().getEnterpriseList()){
                    for (Organization organisation : enterprise.getOrganizationDirectory().getOrganizationList()){
                        if(organisation instanceof ApplicantOrg){
                           //LP Please add code later!!!
                    }
                    }
                  }
                }
            }
        }
        
        FundingWorkRequest req = new FundingWorkRequest();
        req.setMessage("Kindly provide approval for the requested funds!!");
        req.setSender(userAccount);
        req.setStatus("Sent");
        req.setCampaign(eventNameFromTextField.getText());
        req.setAmount(money);
        req.setEventName(campaignName);

        
        Organization org1 = null;
         for(Network network : ecoSystem.getNetworks()){          
            for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                System.out.println("####LP#### Enterprise" +enterprise.toString());
                if(enterprise instanceof FundingEnterprise){
                   
                    for(Organization org :  enterprise.getOrganizationDirectory().getOrganizationList()){  
                        System.out.println("####LP####");
                        System.out.println(org.toString());
                       if(org instanceof CorporateFundOrg || org instanceof TrustFundOrg){
                           org1 = org; 
                           System.out.println("####LP####");
                           System.out.println(org1.toString());
                       }
                   }
                }
            }
        }
        if(org1 != null){
            System.out.println("####LP####");
            System.out.println(org1);
            
            org1.getWorkQueue().getWorkRequestList().add(req);
            userAccount.getWorkQueue().getWorkRequestList().add(req);
            System.out.println(org1.getWorkQueue().getWorkRequestList());
            System.out.println(userAccount.getWorkQueue().getWorkRequestList());
        }
        
        CampaignEvent campaign = ecoSystem.createCampaign();
        campaign.setCampaignName(campaignName);
        campaign.setNetworkName(networkName.getName());
        campaign.setDate(eventDate);
        campaign.setMoney(money);
        
        JOptionPane.showMessageDialog(null, "Awareness event created successfully.");
        eventNameFromTextField.setText("");
        jDateChooser2.setDate(eventDate);
        requestFundsFormTextField.setText("");
        populateEventTable();
           
    }//GEN-LAST:event_setupEventBtnActionPerformed

    private void requestFundsFormTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestFundsFormTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requestFundsFormTextFieldActionPerformed

    private void fundsRequestStatusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fundsRequestStatusBtnActionPerformed
        
        FundsRequestStatusPanel freqPanel = new FundsRequestStatusPanel(enterprise, panel, userAccount);
        panel.add("FundRequestStatusJPanel", freqPanel);
        CardLayout layout = (CardLayout) panel.getLayout();
        layout.next(panel);
    }//GEN-LAST:event_fundsRequestStatusBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox chooseCityFormComboBox;
    private javax.swing.JLabel chooseCityFormLabel;
    private javax.swing.JTable displayScheduledEventsTable;
    private javax.swing.JLabel eventDateFormLabel;
    private javax.swing.JLabel eventNameFormLabel;
    private javax.swing.JTextField eventNameFromTextField;
    private javax.swing.JButton fundsRequestStatusBtn;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton reqCorporateFunds;
    private javax.swing.JLabel requestFundsFormCurrencyLabel;
    private javax.swing.JLabel requestFundsFormLabel;
    private javax.swing.JTextField requestFundsFormTextField;
    private javax.swing.JLabel scheduledEventTableLabel;
    private javax.swing.JButton setupEventBtn;
    // End of variables declaration//GEN-END:variables
}
