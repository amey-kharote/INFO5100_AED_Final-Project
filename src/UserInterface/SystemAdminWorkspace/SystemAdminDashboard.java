/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminWorkspace;

import UserInterface.HospitalAdminWorkspace.CheckDonorRecipientRatio;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Entity.Applicant;
import Business.Entity.ApplicantDirectory;
import Business.Entity.Donor;
import Business.Network.Network;
import Business.Organization.Organization;
import UserInterface.OrganDonationMatchingWorkArea.ManageOrganMatchInitialRoute;
import UserInterface.HospitalAdminWorkspace.ShowingInterestUI;
import static UserInterface.HospitalAdminWorkspace.ShowingInterestUI.countReject;
import java.awt.CardLayout;
import java.awt.Frame;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Amey
 */
public class SystemAdminDashboard extends javax.swing.JPanel {

    EcoSystem ecoSystem;
    JPanel rightJPanel;

    /**
     * Creates new form SystemAdminDashboard
     */
    public SystemAdminDashboard(JPanel rightJPanel, EcoSystem ecoSystemObj) {
        initComponents();
        this.ecoSystem = ecoSystemObj;
        this.rightJPanel = rightJPanel;
    }

    public void populateTree() {
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        rightButtonsJPanel = new javax.swing.JPanel();
        selectedNodeLabel = new javax.swing.JLabel();
        selectedNodeLabelValue = new javax.swing.JLabel();
        manageNetworkBtn = new javax.swing.JButton();
        manageEnterpriseBtn = new javax.swing.JButton();
        manageEnterpriseAdminBtn = new javax.swing.JButton();
        manageDonorRecipientBtn = new javax.swing.JButton();
        analysisBtn = new javax.swing.JButton();
        leftTreeJPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();

        jSplitPane1.setDividerLocation(200);

        rightButtonsJPanel.setBackground(java.awt.SystemColor.activeCaption);

        selectedNodeLabel.setText("Selected Node");

        selectedNodeLabelValue.setText("<value>");

        manageNetworkBtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        manageNetworkBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/icons8-blockchain-technology-24.png"))); // NOI18N
        manageNetworkBtn.setText("Manage Network");
        manageNetworkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageNetworkBtnActionPerformed(evt);
            }
        });

        manageEnterpriseBtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        manageEnterpriseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/icons8-enterprise-24.png"))); // NOI18N
        manageEnterpriseBtn.setText("Manage Enterprise");
        manageEnterpriseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEnterpriseBtnActionPerformed(evt);
            }
        });

        manageEnterpriseAdminBtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        manageEnterpriseAdminBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/icons8-enterprise-admin.png"))); // NOI18N
        manageEnterpriseAdminBtn.setText("Manage Enterprise Admin");
        manageEnterpriseAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEnterpriseAdminBtnActionPerformed(evt);
            }
        });

        manageDonorRecipientBtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        manageDonorRecipientBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/management.png"))); // NOI18N
        manageDonorRecipientBtn.setText("Manage Donors and Recipient Name");
        manageDonorRecipientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageDonorRecipientBtnActionPerformed(evt);
            }
        });

        analysisBtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        analysisBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/icons8-analysis-24.png"))); // NOI18N
        analysisBtn.setText("Analysis");
        analysisBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analysisBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rightButtonsJPanelLayout = new javax.swing.GroupLayout(rightButtonsJPanel);
        rightButtonsJPanel.setLayout(rightButtonsJPanelLayout);
        rightButtonsJPanelLayout.setHorizontalGroup(
            rightButtonsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightButtonsJPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(rightButtonsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(analysisBtn)
                    .addComponent(manageNetworkBtn)
                    .addGroup(rightButtonsJPanelLayout.createSequentialGroup()
                        .addComponent(selectedNodeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectedNodeLabelValue))
                    .addComponent(manageEnterpriseBtn)
                    .addComponent(manageEnterpriseAdminBtn)
                    .addComponent(manageDonorRecipientBtn))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        rightButtonsJPanelLayout.setVerticalGroup(
            rightButtonsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightButtonsJPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(rightButtonsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedNodeLabel)
                    .addComponent(selectedNodeLabelValue))
                .addGap(56, 56, 56)
                .addComponent(manageNetworkBtn)
                .addGap(54, 54, 54)
                .addComponent(manageEnterpriseBtn)
                .addGap(50, 50, 50)
                .addComponent(manageEnterpriseAdminBtn)
                .addGap(54, 54, 54)
                .addComponent(manageDonorRecipientBtn)
                .addGap(53, 53, 53)
                .addComponent(analysisBtn)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(rightButtonsJPanel);

        jTree1.setBackground(new java.awt.Color(204, 204, 255));
        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout leftTreeJPanelLayout = new javax.swing.GroupLayout(leftTreeJPanel);
        leftTreeJPanel.setLayout(leftTreeJPanelLayout);
        leftTreeJPanelLayout.setHorizontalGroup(
            leftTreeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
        );
        leftTreeJPanelLayout.setVerticalGroup(
            leftTreeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(leftTreeJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void manageNetworkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageNetworkBtnActionPerformed
        // TODO add your handling code here:
        ManageCitiesNetwork manageNetwork = new ManageCitiesNetwork(rightJPanel, ecoSystem);
        rightJPanel.add("manageCityNetworks", manageNetwork);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.next(rightJPanel);
    }//GEN-LAST:event_manageNetworkBtnActionPerformed

    private void manageEnterpriseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEnterpriseBtnActionPerformed
        // TODO add your handling code here:
        if (ecoSystem.getNetworks().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Currently there are no networks. Please create a network.");
            return;
        }
        ManageEnterpriseAddEnterprise enterpriseObj = new ManageEnterpriseAddEnterprise(rightJPanel, ecoSystem);
        rightJPanel.add("manageAddEnterprise", enterpriseObj);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.next(rightJPanel);
    }//GEN-LAST:event_manageEnterpriseBtnActionPerformed

    private void manageEnterpriseAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEnterpriseAdminBtnActionPerformed
        // TODO add your handling code here:
        if (ecoSystem.getNetworks().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please create networks before creating admins");
            return;
        }
        for (Network networkObj : ecoSystem.getNetworks()) {
            if (!networkObj.getEnterpriseDirectory().getEnterpriseList().isEmpty()) {
                ManageEnterpriseAdminDash manageEntAdmins = new ManageEnterpriseAdminDash(rightJPanel, ecoSystem);
                rightJPanel.add("manageEntAdmins", manageEntAdmins);
                CardLayout layout = (CardLayout) rightJPanel.getLayout();
                layout.next(rightJPanel);
                return;
            }
        }    
        JOptionPane.showMessageDialog(null, "Please create enterprises before creating admins");
    }//GEN-LAST:event_manageEnterpriseAdminBtnActionPerformed

    private void manageDonorRecipientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageDonorRecipientBtnActionPerformed
        // TODO add your handling code here:
        ManageOrganMatchInitialRoute organMatching = new ManageOrganMatchInitialRoute(ecoSystem, rightJPanel);
        rightJPanel.add("organMatching", organMatching);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.next(rightJPanel);
    }//GEN-LAST:event_manageDonorRecipientBtnActionPerformed

    private void analysisBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analysisBtnActionPerformed
        // TODO add your handling code here:      
        int counter = 0;
        
        for (Network network : ecoSystem.getNetworks()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization.getName().equalsIgnoreCase("Applicant Org")) {
                       
                        for (Donor donorman : organization.getDonorDirectory().getDonorRecords()) {
                            counter = counter + 1;
                        }
                    }
                }
            }
        }


        Frame frames = new Frame();

        DefaultPieDataset pieDataSet = new DefaultPieDataset();
        pieDataSet.setValue("The Donor is willing to donate!!", counter);
        pieDataSet.setValue("The Donor is not willing to donate!!", countReject);
        
        JFreeChart charts = ChartFactory.createPieChart("Pie Chart", pieDataSet, true, true, true);

        ChartPanel chartPanel = new ChartPanel(charts);
        frames.add(chartPanel);

        frames.pack();
        frames.setVisible(true);
        chartPanel.setSize(600, 600);
        chartPanel.setVisible(true);

    }//GEN-LAST:event_analysisBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analysisBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTree jTree1;
    private javax.swing.JPanel leftTreeJPanel;
    private javax.swing.JButton manageDonorRecipientBtn;
    private javax.swing.JButton manageEnterpriseAdminBtn;
    private javax.swing.JButton manageEnterpriseBtn;
    private javax.swing.JButton manageNetworkBtn;
    private javax.swing.JPanel rightButtonsJPanel;
    private javax.swing.JLabel selectedNodeLabel;
    private javax.swing.JLabel selectedNodeLabelValue;
    // End of variables declaration//GEN-END:variables
}
